/**********************************************************************
 * Extern for ReactGoogleMaps
 * Generated by http://jmmk.github.io/javascript-externs-generator
 * generate-extern -f react-google-maps.inc.js -n ReactGoogleMaps -o react-google-maps.ext.js
 **********************************************************************/
var ReactGoogleMaps = {
  "withGoogleMap": function () {},
  "GoogleMap": {
    "displayName": {},
    "propTypes": {
      "center": {
        "isRequired": function () {}
      },
      "heading": {
        "isRequired": function () {}
      },
      "mapTypeId": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "streetView": {
        "isRequired": function () {}
      },
      "tilt": {
        "isRequired": function () {}
      },
      "zoom": {
        "isRequired": function () {}
      },
      "defaultCenter": {
        "isRequired": function () {}
      },
      "defaultHeading": {
        "isRequired": function () {}
      },
      "defaultMapTypeId": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      },
      "defaultStreetView": {
        "isRequired": function () {}
      },
      "defaultTilt": {
        "isRequired": function () {}
      },
      "defaultZoom": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "Marker": {
    "displayName": {},
    "propTypes": {
      "animation": {
        "isRequired": function () {}
      },
      "attribution": {
        "isRequired": function () {}
      },
      "clickable": {
        "isRequired": function () {}
      },
      "cursor": {
        "isRequired": function () {}
      },
      "draggable": {
        "isRequired": function () {}
      },
      "icon": {
        "isRequired": function () {}
      },
      "label": {
        "isRequired": function () {}
      },
      "opacity": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "place": {
        "isRequired": function () {}
      },
      "position": {
        "isRequired": function () {}
      },
      "shape": {
        "isRequired": function () {}
      },
      "title": {
        "isRequired": function () {}
      },
      "visible": {
        "isRequired": function () {}
      },
      "zIndex": {
        "isRequired": function () {}
      },
      "defaultAnimation": {
        "isRequired": function () {}
      },
      "defaultAttribution": {
        "isRequired": function () {}
      },
      "defaultClickable": {
        "isRequired": function () {}
      },
      "defaultCursor": {
        "isRequired": function () {}
      },
      "defaultDraggable": {
        "isRequired": function () {}
      },
      "defaultIcon": {
        "isRequired": function () {}
      },
      "defaultLabel": {
        "isRequired": function () {}
      },
      "defaultOpacity": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      },
      "defaultPlace": {
        "isRequired": function () {}
      },
      "defaultPosition": {
        "isRequired": function () {}
      },
      "defaultShape": {
        "isRequired": function () {}
      },
      "defaultTitle": {
        "isRequired": function () {}
      },
      "defaultVisible": {
        "isRequired": function () {}
      },
      "defaultZIndex": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      },
      "__SECRET_MARKER_CLUSTERER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    },
    "childContextTypes": {
      "__SECRET_ANCHOR_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "Rectangle": {
    "displayName": {},
    "propTypes": {
      "bounds": {
        "isRequired": function () {}
      },
      "draggable": {
        "isRequired": function () {}
      },
      "editable": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "visible": {
        "isRequired": function () {}
      },
      "defaultBounds": {
        "isRequired": function () {}
      },
      "defaultDraggable": {
        "isRequired": function () {}
      },
      "defaultEditable": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      },
      "defaultVisible": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "Polyline": {
    "displayName": {},
    "propTypes": {
      "draggable": {
        "isRequired": function () {}
      },
      "editable": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "path": {
        "isRequired": function () {}
      },
      "visible": {
        "isRequired": function () {}
      },
      "defaultDraggable": {
        "isRequired": function () {}
      },
      "defaultEditable": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      },
      "defaultPath": {
        "isRequired": function () {}
      },
      "defaultVisible": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "Polygon": {
    "displayName": {},
    "propTypes": {
      "draggable": {
        "isRequired": function () {}
      },
      "editable": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "path": {
        "isRequired": function () {}
      },
      "paths": {
        "isRequired": function () {}
      },
      "visible": {
        "isRequired": function () {}
      },
      "defaultDraggable": {
        "isRequired": function () {}
      },
      "defaultEditable": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      },
      "defaultPath": {
        "isRequired": function () {}
      },
      "defaultPaths": {
        "isRequired": function () {}
      },
      "defaultVisible": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "Circle": {
    "displayName": {},
    "propTypes": {
      "center": {
        "isRequired": function () {}
      },
      "draggable": {
        "isRequired": function () {}
      },
      "editable": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "radius": {
        "isRequired": function () {}
      },
      "visible": {
        "isRequired": function () {}
      },
      "defaultCenter": {
        "isRequired": function () {}
      },
      "defaultDraggable": {
        "isRequired": function () {}
      },
      "defaultEditable": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      },
      "defaultRadius": {
        "isRequired": function () {}
      },
      "defaultVisible": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "KmlLayer": {
    "displayName": {},
    "propTypes": {
      "defaultViewport": {
        "isRequired": function () {}
      },
      "metadata": {
        "isRequired": function () {}
      },
      "status": {
        "isRequired": function () {}
      },
      "url": {
        "isRequired": function () {}
      },
      "zIndex": {
        "isRequired": function () {}
      },
      "defaultDefaultViewport": {
        "isRequired": function () {}
      },
      "defaultMetadata": {
        "isRequired": function () {}
      },
      "defaultStatus": {
        "isRequired": function () {}
      },
      "defaultUrl": {
        "isRequired": function () {}
      },
      "defaultZIndex": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "DirectionsRenderer": {
    "displayName": {},
    "propTypes": {
      "directions": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "panel": {
        "isRequired": function () {}
      },
      "routeIndex": {
        "isRequired": function () {}
      },
      "defaultDirections": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      },
      "defaultPanel": {
        "isRequired": function () {}
      },
      "defaultRouteIndex": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "HeatmapLayer": {
    "displayName": {},
    "propTypes": {
      "data": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "defaultData": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "InfoWindow": {
    "displayName": {},
    "propTypes": {
      "children": {
        "isRequired": function () {}
      },
      "options": {
        "isRequired": function () {}
      },
      "position": {
        "isRequired": function () {}
      },
      "zIndex": {
        "isRequired": function () {}
      },
      "defaultChildren": {
        "isRequired": function () {}
      },
      "defaultOptions": {
        "isRequired": function () {}
      },
      "defaultPosition": {
        "isRequired": function () {}
      },
      "defaultZIndex": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      },
      "__SECRET_ANCHOR_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  },
  "OverlayView": {
    "displayName": {},
    "FLOAT_PANE": {},
    "MAP_PANE": {},
    "MARKER_LAYER": {},
    "OVERLAY_LAYER": {},
    "OVERLAY_MOUSE_TARGET": {},
    "propTypes": {
      "mapPaneName": {
        "isRequired": function () {}
      },
      "position": {
        "isRequired": function () {}
      },
      "bounds": {
        "isRequired": function () {}
      },
      "defaultMapPaneName": {
        "isRequired": function () {}
      },
      "defaultPosition": {
        "isRequired": function () {}
      },
      "defaultBounds": {
        "isRequired": function () {}
      },
      "children": function () {},
      "getPixelPositionOffset": {
        "isRequired": function () {}
      }
    },
    "contextTypes": {
      "__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED": {
        "isRequired": function () {}
      }
    }
  }
};
ReactGoogleMaps.GoogleMap.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "componentWillUnmount": function () {},
  "getBounds": function () {},
  "getCenter": function () {},
  "getDiv": function () {},
  "getHeading": function () {},
  "getMapTypeId": function () {},
  "getProjection": function () {},
  "getStreetView": function () {},
  "getTilt": function () {},
  "getZoom": function () {},
  "fitBounds": function () {},
  "panBy": function () {},
  "panTo": function () {},
  "panToBounds": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.Marker.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "getChildContext": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "getAnimation": function () {},
  "getAttribution": function () {},
  "getClickable": function () {},
  "getCursor": function () {},
  "getDraggable": function () {},
  "getIcon": function () {},
  "getLabel": function () {},
  "getOpacity": function () {},
  "getPlace": function () {},
  "getPosition": function () {},
  "getShape": function () {},
  "getTitle": function () {},
  "getVisible": function () {},
  "getZIndex": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.Rectangle.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "getBounds": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getVisible": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.Polyline.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getPath": function () {},
  "getVisible": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.Polygon.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getPath": function () {},
  "getPaths": function () {},
  "getVisible": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.Circle.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "getBounds": function () {},
  "getCenter": function () {},
  "getDraggable": function () {},
  "getEditable": function () {},
  "getMap": function () {},
  "getRadius": function () {},
  "getVisible": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.KmlLayer.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "getDefaultViewport": function () {},
  "getMetadata": function () {},
  "getStatus": function () {},
  "getUrl": function () {},
  "getZIndex": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.DirectionsRenderer.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "getDirections": function () {},
  "getPanel": function () {},
  "getRouteIndex": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.HeatmapLayer.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.InfoWindow.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "componentDidMount": function () {},
  "componentWillReceiveProps": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "componentDidUpdate": function () {},
  "_unregisterEvents": function () {},
  "getPosition": function () {},
  "getZIndex": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
ReactGoogleMaps.OverlayView.prototype = {
  "constructor": function () {},
  "__reactAutoBindPairs": function () {},
  "getInitialState": function () {},
  "onAdd": function () {},
  "draw": function () {},
  "onRemove": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "render": function () {},
  "_unregisterEvents": function () {},
  "componentDidMount": function () {},
  "getPanes": function () {},
  "getProjection": function () {},
  "mixins": function () {},
  "statics": function () {},
  "propTypes": function () {},
  "contextTypes": function () {},
  "childContextTypes": function () {},
  "getDefaultProps": function () {},
  "getChildContext": function () {},
  "componentWillMount": function () {},
  "componentWillReceiveProps": function () {},
  "shouldComponentUpdate": function () {},
  "componentWillUpdate": function () {},
  "updateComponent": function () {},
  "isReactComponent": function () {},
  "setState": function () {},
  "forceUpdate": function () {},
  "replaceState": function () {},
  "isMounted": function () {}
};
/**********************************************************************
 * End Generated Extern for ReactGoogleMaps
/**********************************************************************/
